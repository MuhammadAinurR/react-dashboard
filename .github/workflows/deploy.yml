name: Build and Deploy Dashboard

on:
  push:
    branches: [development]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "22.4.0"

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build
        env:
          CI: false # This prevents treating warnings as errors

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ env.KEY }}
          debug: true
          script: |
            # Create directory if it doesn't exist and set permissions
            sudo mkdir -p /var/www/dashboard-staging-degenmax

            # Clean the directory with sudo
            sudo rm -rf /var/www/dashboard-staging-degenmax/*

            # Set appropriate permissions for the web directory
            sudo chown -R $USER:$USER /var/www/dashboard-staging-degenmax

      - name: Copy build files to VPS
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ env.KEY }}
          source: "dist/*" # Copy only the build folder
          target: "/var/www/dashboard-staging-degenmax"
          strip_components: 1 # This removes the 'build' directory name

      - name: Configure Nginx
        uses: appleboy/ssh-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ env.KEY }}
          debug: true
          script: |
            # Create Nginx configuration
            sudo tee /etc/nginx/sites-available/dashboard-staging.degenmax.ainurrofiq.site << 'EOF'
            server {
                listen 80;
                server_name dashboard-staging.degenmax.ainurrofiq.site;

                # Explicitly set root directory
                root /var/www/dashboard-staging-degenmax;
                index index.html;

                # More specific location block for the dashboard
                location / {
                    try_files $uri $uri/ /index.html;
                    # Prevent proxy_pass to API
                    proxy_pass_request_headers off;
                    proxy_pass_request_body off;
                }

                # Deny access to any potential API paths to prevent confusion
                location /api {
                    return 404;
                }
            }
            EOF

            # Create symbolic link if it doesn't exist
            sudo ln -sf /etc/nginx/sites-available/dashboard-staging.degenmax.ainurrofiq.site /etc/nginx/sites-enabled/

            # Test Nginx configuration
            sudo nginx -t

            # Reload Nginx
            sudo systemctl reload nginx
